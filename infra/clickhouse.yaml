apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: local-storage
  namespace: onchain
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: local-path-pv
  namespace: onchain
spec:
  capacity:
    storage: 50Gi
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  storageClassName: local-storage
  local:
    path: /data
  nodeAffinity:
    required:
      nodeSelectorTerms:
        - matchExpressions:
          - key: kubernetes.io/hostname
            operator: In
            values:
              - k3d-main-agent-0
              - k3d-main-agent-1
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: local-path-pvc
  namespace: onchain
spec:
  storageClassName: local-storage
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 50Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: clickhouse-configmap
  namespace: onchain
data:
  config.onchain.yaml: |
    listen_host: 0.0.0.0
    prometheus:
      endpoint: /metrics
      port: 9363
      metrics: true
      events: true
      asynchronous_metrics: true
  users_config.profiles.yaml: |
    profiles:
      admin:
        max_memory_usage: 5000000000
        load_balancing: random
  users_config.quotas.yaml: |
    quotas:
      admin:
        interval:
          duration: 3600
          queries: 0
          errors: 0
          results_rows: 0
          read_rows: 0
          execution_time: 0
  users_config.roles.yaml: |
    roles:
      admin:
        grants:
          - query: "GRANT SHOW ON *.*"
          - query: "REVOKE SHOW ON system.*"
          - query: "GRANT CREATE ON *.* WITH GRANT OPTION"
  user.onchain.yaml: |
    users:
      onchain:
        password: onchain
        networks:
          ip: "::/0"
        profile: admin
        quota: admin
        access_management: 1
        named_collection_control: 1
        show_named_collections: 1
        show_named_collections_secrets: 1
        double_sha1_passwords: 1
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: clickhouse
spec:
  replicas: 1
  selector:
    matchLabels:
      app: clickhouse
  template:
    metadata:
      labels:
        app: clickhouse
    spec:
      volumes:
        - name: clickhouse-configmap
          configMap:
            name: clickhouse-configmap
        - name: clickhouse-storage
          persistentVolumeClaim:
            claimName: local-path-pvc
      containers:
      - name: clickhouse
        image: clickhouse/clickhouse-server:24.1.6.52-alpine
        # command: ["sleep","infinity"]
        ports:
        - containerPort: 8123
        - containerPort: 8443
        - containerPort: 9000
        - containerPort: 9363
        resources:
          limits:
            cpu: 750m
            memory: 4Gi
          requests:
            cpu: 500m
            memory: 4Gi
        volumeMounts:
            - name: clickhouse-storage
              mountPath: /var/lib/clickhouse
            - name: clickhouse-configmap
              mountPath: /etc/clickhouse-server/config.d/config.onchain.yaml
              subPath: config.onchain.yaml
            - name: clickhouse-configmap
              mountPath: /etc/clickhouse-server/users.d/users_config.profiles.yaml
              subPath: users_config.profiles.yaml
            - name: clickhouse-configmap
              mountPath: /etc/clickhouse-server/users.d/users_config.quotas.yaml
              subPath: users_config.quotas.yaml
            - name: clickhouse-configmap
              mountPath: /etc/clickhouse-server/users.d/users_config.roles.yaml
              subPath: users_config.roles.yaml
            - name: clickhouse-configmap
              mountPath: /etc/clickhouse-server/users.d/user.onchain.yaml
              subPath: user.onchain.yaml
---
apiVersion: v1
kind: Service
metadata:
  name: clickhouse
  namespace: onchain
spec:
  selector:
    app: clickhouse
  type: ClusterIP
  ports:
    - port: 9000
      targetPort: 9000
      protocol: TCP
      name: http
    - port: 8123
      targetPort: 8123
      protocol: TCP
      name: http-non-tls
    - port: 8443
      targetPort: 8443
      protocol: TCP
      name: https-tls