syntax = "proto3";

message Block {
  int64 number = 1;
  string hash = 2;
  string parent_hash = 3;
  string nonce = 4;
  string sha3_uncles = 5;
  string logs_bloom = 6;
  string transactions_root = 7;
  string state_root = 8;
  string receipts_root = 9;
  string miner = 10;
  int64 difficulty = 11;
  int64 total_difficulty = 12;
  string extra_data = 13;
  int64 size = 14;
  int64 gas_limit = 15;
  int64 gas_used = 16;
  int64 base_fee_per_gas = 17;
  int64 timestamp = 18;
  repeated string transactions = 19;
  repeated string uncles = 20;
}

message Transaction {
  string block_hash = 1;
  int64 block_number = 2;
  string from = 3;
  int64 gas = 4;
  int64 gas_price = 5;
  string hash = 6;
  string input = 7;
  string nonce = 8;
  string to = 9;
  int64 transaction_index = 10;
  int64 value = 11;
  int64 v = 12;
  string r = 13;
  string s = 14;
}

message Log {
  bool removed = 1;
  int64 log_index = 2;
  int64 transaction_index = 3;
  string transaction_hash = 4;
  string block_hash = 5;
  int64 block_number = 6;
  string address = 7;
  string data = 8;
  repeated string topics = 9;
}

message Receipt {
  string transaction_hash = 1;
  int64 transaction_index = 2;
  string block_hash = 3;
  int64 block_number = 4;
  string from = 5;
  string to = 6;
  int64 cumulative_gas_used = 7;
  int64 effective_gas_price = 8;
  int64 gas_used = 9;
  string contract_address = 10;
  repeated Log logs = 11;
  string logs_bloom = 12;
  string type = 13;
  string root = 14;
  bool status = 15;
}

message StructLog {
  int64 pc = 1;
  string op = 2;
  int64 gas = 3;
  int64 gas_cost = 4;
  int64 depth = 5;
  string error = 6;
  repeated string stack = 7;
  repeated string memory = 8;
  string storage = 9;
  int64 refund = 10;
}

message Trace {
  bool failed = 1;
  int64 gas = 2;
  string return_value = 3;
  repeated StructLog StructLogs = 4;
}